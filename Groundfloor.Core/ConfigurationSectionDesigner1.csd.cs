//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Groundfloor.Configuration.AppServices
{
    
    
    /// <summary>
    /// The AppServicesSection Configuration Section.
    /// </summary>
    public partial class AppServicesSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the AppServicesSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string AppServicesSectionSectionName = "appServicesSection";
        
        /// <summary>
        /// Gets the AppServicesSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::Groundfloor.Configuration.AppServices.AppServicesSection Instance
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.AppServicesSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Groundfloor.Configuration.AppServices.AppServicesSection.AppServicesSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.AppServicesSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Groundfloor.Configuration.AppServices.AppServicesSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region enabled Property
        /// <summary>
        /// The XML name of the <see cref="enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string enabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets the enabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The enabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.AppServicesSection.enabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool enabled
        {
            get
            {
                return ((bool)(base[global::Groundfloor.Configuration.AppServices.AppServicesSection.enabledPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.AppServicesSection.enabledPropertyName] = value;
            }
        }
        #endregion
        
        #region requestTTLSeconds Property
        /// <summary>
        /// The XML name of the <see cref="requestTTLSeconds"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string requestTTLSecondsPropertyName = "requestTTLSeconds";
        
        /// <summary>
        /// Gets or sets the requestTTLSeconds.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The requestTTLSeconds.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.AppServicesSection.requestTTLSecondsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=3600)]
        public int requestTTLSeconds
        {
            get
            {
                return ((int)(base[global::Groundfloor.Configuration.AppServices.AppServicesSection.requestTTLSecondsPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.AppServicesSection.requestTTLSecondsPropertyName] = value;
            }
        }
        #endregion
        
        #region secret Property
        /// <summary>
        /// The XML name of the <see cref="secret"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string secretPropertyName = "secret";
        
        /// <summary>
        /// Gets or sets the secret.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The secret.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.AppServicesSection.secretPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string secret
        {
            get
            {
                return ((string)(base[global::Groundfloor.Configuration.AppServices.AppServicesSection.secretPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.AppServicesSection.secretPropertyName] = value;
            }
        }
        #endregion
        
        #region ipSecurity Property
        /// <summary>
        /// The XML name of the <see cref="ipSecurity"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ipSecurityPropertyName = "ipSecurity";
        
        /// <summary>
        /// Gets or sets the ipSecurity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ipSecurity.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.AppServicesSection.ipSecurityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::Groundfloor.Configuration.AppServices.ipSecurityElement ipSecurity
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.ipSecurityElement)(base[global::Groundfloor.Configuration.AppServices.AppServicesSection.ipSecurityPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.AppServicesSection.ipSecurityPropertyName] = value;
            }
        }
        #endregion
        
        #region commands Property
        /// <summary>
        /// The XML name of the <see cref="commands"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string commandsPropertyName = "commands";
        
        /// <summary>
        /// Gets or sets the commands.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The commands.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.AppServicesSection.commandsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::Groundfloor.Configuration.AppServices.CommandElementCollection commands
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.CommandElementCollection)(base[global::Groundfloor.Configuration.AppServices.AppServicesSection.commandsPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.AppServicesSection.commandsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Groundfloor.Configuration.AppServices
{
    
    
    /// <summary>
    /// The HostElement Configuration Element.
    /// </summary>
    public partial class HostElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region host Property
        /// <summary>
        /// The XML name of the <see cref="host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string hostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.HostElement.hostPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string host
        {
            get
            {
                return ((string)(base[global::Groundfloor.Configuration.AppServices.HostElement.hostPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.HostElement.hostPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Groundfloor.Configuration.AppServices
{
    
    
    /// <summary>
    /// A collection of CommandElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Groundfloor.Configuration.AppServices.CommandElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Groundfloor.Configuration.AppServices.CommandElementCollection.CommandElementPropertyName)]
    public partial class CommandElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandElementPropertyName = "commands";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::Groundfloor.Configuration.AppServices.CommandElementCollection.CommandElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Groundfloor.Configuration.AppServices.CommandElementCollection.CommandElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Groundfloor.Configuration.AppServices.CommandElement)(element)).method;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Groundfloor.Configuration.AppServices.CommandElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.CommandElement this[int index]
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.CommandElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> with the specified key.
        /// </summary>
        /// <param name="method">The key of the <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.CommandElement this[object method]
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.CommandElement)(base.BaseGet(method)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="commands">The <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::Groundfloor.Configuration.AppServices.CommandElement commands)
        {
            base.BaseAdd(commands);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="commands">The <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::Groundfloor.Configuration.AppServices.CommandElement commands)
        {
            base.BaseRemove(this.GetElementKey(commands));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.CommandElement GetItemAt(int index)
        {
            return ((global::Groundfloor.Configuration.AppServices.CommandElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> with the specified key.
        /// </summary>
        /// <param name="method">The key of the <see cref="global::Groundfloor.Configuration.AppServices.CommandElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.CommandElement GetItemByKey(string method)
        {
            return ((global::Groundfloor.Configuration.AppServices.CommandElement)(base.BaseGet(((object)(method)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Groundfloor.Configuration.AppServices
{
    
    
    /// <summary>
    /// The CommandElement Configuration Element.
    /// </summary>
    public partial class CommandElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region method Property
        /// <summary>
        /// The XML name of the <see cref="method"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string methodPropertyName = "method";
        
        /// <summary>
        /// Gets or sets the method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The method.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.CommandElement.methodPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string method
        {
            get
            {
                return ((string)(base[global::Groundfloor.Configuration.AppServices.CommandElement.methodPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.CommandElement.methodPropertyName] = value;
            }
        }
        #endregion
        
        #region enabled Property
        /// <summary>
        /// The XML name of the <see cref="enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string enabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets the enabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The enabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.CommandElement.enabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public bool enabled
        {
            get
            {
                return ((bool)(base[global::Groundfloor.Configuration.AppServices.CommandElement.enabledPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.CommandElement.enabledPropertyName] = value;
            }
        }
        #endregion
        
        #region type Property
        /// <summary>
        /// The XML name of the <see cref="type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string typePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.CommandElement.typePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string type
        {
            get
            {
                return ((string)(base[global::Groundfloor.Configuration.AppServices.CommandElement.typePropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.CommandElement.typePropertyName] = value;
            }
        }
        #endregion
        
        #region description Property
        /// <summary>
        /// The XML name of the <see cref="description"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string descriptionPropertyName = "description";
        
        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The description.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.CommandElement.descriptionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string description
        {
            get
            {
                return ((string)(base[global::Groundfloor.Configuration.AppServices.CommandElement.descriptionPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.CommandElement.descriptionPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Groundfloor.Configuration.AppServices
{
    
    
    /// <summary>
    /// The ipSecurityElement Configuration Element.
    /// </summary>
    public partial class ipSecurityElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region allow Property
        /// <summary>
        /// The XML name of the <see cref="allow"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string allowPropertyName = "allow";
        
        /// <summary>
        /// Gets or sets the allow.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The allow.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.ipSecurityElement.allowPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::Groundfloor.Configuration.AppServices.AllowCollection allow
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.AllowCollection)(base[global::Groundfloor.Configuration.AppServices.ipSecurityElement.allowPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.ipSecurityElement.allowPropertyName] = value;
            }
        }
        #endregion
        
        #region deny Property
        /// <summary>
        /// The XML name of the <see cref="deny"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string denyPropertyName = "deny";
        
        /// <summary>
        /// Gets or sets the deny.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The deny.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Groundfloor.Configuration.AppServices.ipSecurityElement.denyPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::Groundfloor.Configuration.AppServices.DenyCollection deny
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.DenyCollection)(base[global::Groundfloor.Configuration.AppServices.ipSecurityElement.denyPropertyName]));
            }
            set
            {
                base[global::Groundfloor.Configuration.AppServices.ipSecurityElement.denyPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Groundfloor.Configuration.AppServices
{
    
    
    /// <summary>
    /// A collection of HostElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Groundfloor.Configuration.AppServices.HostElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Groundfloor.Configuration.AppServices.AllowCollection.HostElementPropertyName)]
    public partial class AllowCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string HostElementPropertyName = "deny";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::Groundfloor.Configuration.AppServices.AllowCollection.HostElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Groundfloor.Configuration.AppServices.AllowCollection.HostElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Groundfloor.Configuration.AppServices.HostElement)(element)).host;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Groundfloor.Configuration.AppServices.HostElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.HostElement this[int index]
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.HostElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> with the specified key.
        /// </summary>
        /// <param name="host">The key of the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.HostElement this[object host]
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.HostElement)(base.BaseGet(host)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="deny">The <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::Groundfloor.Configuration.AppServices.HostElement deny)
        {
            base.BaseAdd(deny);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="deny">The <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::Groundfloor.Configuration.AppServices.HostElement deny)
        {
            base.BaseRemove(this.GetElementKey(deny));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.HostElement GetItemAt(int index)
        {
            return ((global::Groundfloor.Configuration.AppServices.HostElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> with the specified key.
        /// </summary>
        /// <param name="host">The key of the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.HostElement GetItemByKey(string host)
        {
            return ((global::Groundfloor.Configuration.AppServices.HostElement)(base.BaseGet(((object)(host)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Groundfloor.Configuration.AppServices
{
    
    
    /// <summary>
    /// A collection of HostElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Groundfloor.Configuration.AppServices.HostElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Groundfloor.Configuration.AppServices.DenyCollection.HostElementPropertyName)]
    public partial class DenyCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string HostElementPropertyName = "allow";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::Groundfloor.Configuration.AppServices.DenyCollection.HostElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Groundfloor.Configuration.AppServices.DenyCollection.HostElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Groundfloor.Configuration.AppServices.HostElement)(element)).host;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Groundfloor.Configuration.AppServices.HostElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.HostElement this[int index]
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.HostElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> with the specified key.
        /// </summary>
        /// <param name="host">The key of the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.HostElement this[object host]
        {
            get
            {
                return ((global::Groundfloor.Configuration.AppServices.HostElement)(base.BaseGet(host)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="allow">The <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::Groundfloor.Configuration.AppServices.HostElement allow)
        {
            base.BaseAdd(allow);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="allow">The <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::Groundfloor.Configuration.AppServices.HostElement allow)
        {
            base.BaseRemove(this.GetElementKey(allow));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.HostElement GetItemAt(int index)
        {
            return ((global::Groundfloor.Configuration.AppServices.HostElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> with the specified key.
        /// </summary>
        /// <param name="host">The key of the <see cref="global::Groundfloor.Configuration.AppServices.HostElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::Groundfloor.Configuration.AppServices.HostElement GetItemByKey(string host)
        {
            return ((global::Groundfloor.Configuration.AppServices.HostElement)(base.BaseGet(((object)(host)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
