// ------------------------------------------------------------------------------
// DO NOT MODIFY THIS CLASS - AutoGenerated Code
//    Any changes made to this code will be lost the next time this 
//    code is regenerated.
// 
//    Generated at: 8/17/2012 4:13:01 PM
//    DevForce version: 6.1.8.0
//    Template version: 2.1.4
// ------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using IbEm   = IdeaBlade.EntityModel;
using IbCore = IdeaBlade.Core;
using IbVal  = IdeaBlade.Validation;

[module: IbCore.IdeaBladeLicense("KFNdYGaiNl09i7XJCB0UZkWluzvopr1rUI5Jzz3okIDGKr7LyK1c/Z+D0oyqjvXV")]

namespace Groundfloor.Services { 

  #region GeoLocationEntities

  /// <summary>
  /// The domain-specific EntityManager for your domain model.
  /// </summary>
  public partial class GeoLocationEntities : IbEm.EntityManager {

    #region Constructors

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public GeoLocationEntities(bool shouldConnect=true, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManagerContext)"/>. </summary>
    public GeoLocationEntities(IbEm.EntityManagerContext entityManagerContext) : base(entityManagerContext) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public GeoLocationEntities(IbEm.EntityManager entityManager, bool shouldConnect, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(entityManager, shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, IbEm.EntityManagerContext)"/>. </summary>
    public GeoLocationEntities(IbEm.EntityManager entityManager, IbEm.EntityManagerContext entityManagerContext=null) : base(entityManager, entityManagerContext) {}

    static GeoLocationEntities() {
      IbEm.EntityRelation.InitializeEntityRelations(System.Reflection.Assembly.GetExecutingAssembly());
    }
    #endregion Constructors

    #region EntityQueries

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<USCities> USCities {
      get { return new IbEm.EntityQuery<USCities>("USCities", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<DELUXE_BUSINESS> DELUXE_BUSINESS {
      get { return new IbEm.EntityQuery<DELUXE_BUSINESS>("DELUXE_BUSINESS", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<MULTI_COUNTY> MULTI_COUNTY {
      get { return new IbEm.EntityQuery<MULTI_COUNTY>("MULTI_COUNTY", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Zipcode> Zipcode {
      get { return new IbEm.EntityQuery<Zipcode>("Zipcode", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<USCity> USCity {
      get { return new IbEm.EntityQuery<USCity>("USCity", this); }
    }
    #endregion EntityQueries
  }
  #endregion GeoLocationEntities

  #region USCities class

  /// <summary>The auto-generated USCities class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"GeoLocationEntities")]
  [IbEm.DefaultEntitySetName(@"GeoLocationEntities.USCities")]
  public partial class USCities : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<USCities, object>> expr) {
      return IbCore.PropertyPath.For<USCities>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="USCities_Id")]
    public int Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Country. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Country", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=150, IsRequired=false, ErrorMessageResourceName="USCities_Country")]
    public string Country {
      get { return PropertyMetadata.Country.GetValue(this); }
      set { PropertyMetadata.Country.SetValue(this, value); }
    }

    /// <summary>Gets or sets the City. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="City", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=250, IsRequired=false, ErrorMessageResourceName="USCities_City")]
    public string City {
      get { return PropertyMetadata.City.GetValue(this); }
      set { PropertyMetadata.City.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AccentCity. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AccentCity", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=250, IsRequired=false, ErrorMessageResourceName="USCities_AccentCity")]
    public string AccentCity {
      get { return PropertyMetadata.AccentCity.GetValue(this); }
      set { PropertyMetadata.AccentCity.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Region. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Region", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="USCities_Region")]
    public string Region {
      get { return PropertyMetadata.Region.GetValue(this); }
      set { PropertyMetadata.Region.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Population. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Population", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="USCities_Population")]
    public string Population {
      get { return PropertyMetadata.Population.GetValue(this); }
      set { PropertyMetadata.Population.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Latitude. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Latitude", AutoGenerateField=true)]
    public System.Nullable<decimal> Latitude {
      get { return PropertyMetadata.Latitude.GetValue(this); }
      set { PropertyMetadata.Latitude.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Longitude. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Longitude", AutoGenerateField=true)]
    public System.Nullable<decimal> Longitude {
      get { return PropertyMetadata.Longitude.GetValue(this); }
      set { PropertyMetadata.Longitude.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCities, int> Id = new IbEm.DataEntityProperty<USCities, int>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The Country <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCities, string> Country = new IbEm.DataEntityProperty<USCities, string>("Country", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The City <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCities, string> City = new IbEm.DataEntityProperty<USCities, string>("City", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AccentCity <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCities, string> AccentCity = new IbEm.DataEntityProperty<USCities, string>("AccentCity", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Region <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCities, string> Region = new IbEm.DataEntityProperty<USCities, string>("Region", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Population <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCities, string> Population = new IbEm.DataEntityProperty<USCities, string>("Population", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Latitude <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCities, System.Nullable<decimal>> Latitude = new IbEm.DataEntityProperty<USCities, System.Nullable<decimal>>("Latitude", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Longitude <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCities, System.Nullable<decimal>> Longitude = new IbEm.DataEntityProperty<USCities, System.Nullable<decimal>>("Longitude", true, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String Country = "Country";
      public const String City = "City";
      public const String AccentCity = "AccentCity";
      public const String Region = "Region";
      public const String Population = "Population";
      public const String Latitude = "Latitude";
      public const String Longitude = "Longitude";
    }
    #endregion EntityPropertyNames
  }
  #endregion USCities class

  #region DELUXE_BUSINESS class

  /// <summary>The auto-generated DELUXE_BUSINESS class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"GeoLocationEntities")]
  [IbEm.DefaultEntitySetName(@"GeoLocationEntities.DELUXE_BUSINESS")]
  public partial class DELUXE_BUSINESS : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<DELUXE_BUSINESS, object>> expr) {
      return IbCore.PropertyPath.For<DELUXE_BUSINESS>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="DELUXE_BUSINESS_Id")]
    public int Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ZipCode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ZipCode", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=5, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_ZipCode")]
    public string ZipCode {
      get { return PropertyMetadata.ZipCode.GetValue(this); }
      set { PropertyMetadata.ZipCode.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PrimaryRecord. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PrimaryRecord", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=2, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_PrimaryRecord")]
    public string PrimaryRecord {
      get { return PropertyMetadata.PrimaryRecord.GetValue(this); }
      set { PropertyMetadata.PrimaryRecord.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Population. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Population", AutoGenerateField=true)]
    public System.Nullable<int> Population {
      get { return PropertyMetadata.Population.GetValue(this); }
      set { PropertyMetadata.Population.SetValue(this, value); }
    }

    /// <summary>Gets or sets the HouseholdsPerZipcode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="HouseholdsPerZipcode", AutoGenerateField=true)]
    public System.Nullable<decimal> HouseholdsPerZipcode {
      get { return PropertyMetadata.HouseholdsPerZipcode.GetValue(this); }
      set { PropertyMetadata.HouseholdsPerZipcode.SetValue(this, value); }
    }

    /// <summary>Gets or sets the WhitePopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="WhitePopulation", AutoGenerateField=true)]
    public System.Nullable<int> WhitePopulation {
      get { return PropertyMetadata.WhitePopulation.GetValue(this); }
      set { PropertyMetadata.WhitePopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BlackPopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BlackPopulation", AutoGenerateField=true)]
    public System.Nullable<int> BlackPopulation {
      get { return PropertyMetadata.BlackPopulation.GetValue(this); }
      set { PropertyMetadata.BlackPopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the HispanicPopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="HispanicPopulation", AutoGenerateField=true)]
    public System.Nullable<int> HispanicPopulation {
      get { return PropertyMetadata.HispanicPopulation.GetValue(this); }
      set { PropertyMetadata.HispanicPopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AsianPopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AsianPopulation", AutoGenerateField=true)]
    public System.Nullable<int> AsianPopulation {
      get { return PropertyMetadata.AsianPopulation.GetValue(this); }
      set { PropertyMetadata.AsianPopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the HawaiianPopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="HawaiianPopulation", AutoGenerateField=true)]
    public System.Nullable<int> HawaiianPopulation {
      get { return PropertyMetadata.HawaiianPopulation.GetValue(this); }
      set { PropertyMetadata.HawaiianPopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IndianPopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IndianPopulation", AutoGenerateField=true)]
    public System.Nullable<int> IndianPopulation {
      get { return PropertyMetadata.IndianPopulation.GetValue(this); }
      set { PropertyMetadata.IndianPopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the OtherPopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="OtherPopulation", AutoGenerateField=true)]
    public System.Nullable<int> OtherPopulation {
      get { return PropertyMetadata.OtherPopulation.GetValue(this); }
      set { PropertyMetadata.OtherPopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MalePopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MalePopulation", AutoGenerateField=true)]
    public System.Nullable<int> MalePopulation {
      get { return PropertyMetadata.MalePopulation.GetValue(this); }
      set { PropertyMetadata.MalePopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the FemalePopulation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="FemalePopulation", AutoGenerateField=true)]
    public System.Nullable<int> FemalePopulation {
      get { return PropertyMetadata.FemalePopulation.GetValue(this); }
      set { PropertyMetadata.FemalePopulation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PersonsPerHousehold. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PersonsPerHousehold", AutoGenerateField=true)]
    public System.Nullable<decimal> PersonsPerHousehold {
      get { return PropertyMetadata.PersonsPerHousehold.GetValue(this); }
      set { PropertyMetadata.PersonsPerHousehold.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AverageHouseValue. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AverageHouseValue", AutoGenerateField=true)]
    public System.Nullable<decimal> AverageHouseValue {
      get { return PropertyMetadata.AverageHouseValue.GetValue(this); }
      set { PropertyMetadata.AverageHouseValue.SetValue(this, value); }
    }

    /// <summary>Gets or sets the IncomePerHousehold. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="IncomePerHousehold", AutoGenerateField=true)]
    public System.Nullable<decimal> IncomePerHousehold {
      get { return PropertyMetadata.IncomePerHousehold.GetValue(this); }
      set { PropertyMetadata.IncomePerHousehold.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MedianAge. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MedianAge", AutoGenerateField=true)]
    public System.Nullable<decimal> MedianAge {
      get { return PropertyMetadata.MedianAge.GetValue(this); }
      set { PropertyMetadata.MedianAge.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MedianAgeMale. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MedianAgeMale", AutoGenerateField=true)]
    public System.Nullable<decimal> MedianAgeMale {
      get { return PropertyMetadata.MedianAgeMale.GetValue(this); }
      set { PropertyMetadata.MedianAgeMale.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MedianAgeFemale. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MedianAgeFemale", AutoGenerateField=true)]
    public System.Nullable<decimal> MedianAgeFemale {
      get { return PropertyMetadata.MedianAgeFemale.GetValue(this); }
      set { PropertyMetadata.MedianAgeFemale.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Latitude. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Latitude", AutoGenerateField=true)]
    public System.Nullable<decimal> Latitude {
      get { return PropertyMetadata.Latitude.GetValue(this); }
      set { PropertyMetadata.Latitude.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Longitude. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Longitude", AutoGenerateField=true)]
    public System.Nullable<decimal> Longitude {
      get { return PropertyMetadata.Longitude.GetValue(this); }
      set { PropertyMetadata.Longitude.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Elevation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Elevation", AutoGenerateField=true)]
    public System.Nullable<int> Elevation {
      get { return PropertyMetadata.Elevation.GetValue(this); }
      set { PropertyMetadata.Elevation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the State. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="State", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=2, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_State")]
    public string State {
      get { return PropertyMetadata.State.GetValue(this); }
      set { PropertyMetadata.State.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StateFullName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StateFullName", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=35, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_StateFullName")]
    public string StateFullName {
      get { return PropertyMetadata.StateFullName.GetValue(this); }
      set { PropertyMetadata.StateFullName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CityType. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CityType", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=1, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CityType")]
    public string CityType {
      get { return PropertyMetadata.CityType.GetValue(this); }
      set { PropertyMetadata.CityType.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CityAliasAbbreviation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CityAliasAbbreviation", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=13, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CityAliasAbbreviation")]
    public string CityAliasAbbreviation {
      get { return PropertyMetadata.CityAliasAbbreviation.GetValue(this); }
      set { PropertyMetadata.CityAliasAbbreviation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AreaCode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AreaCode", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=55, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_AreaCode")]
    public string AreaCode {
      get { return PropertyMetadata.AreaCode.GetValue(this); }
      set { PropertyMetadata.AreaCode.SetValue(this, value); }
    }

    /// <summary>Gets or sets the City. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="City", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=35, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_City")]
    public string City {
      get { return PropertyMetadata.City.GetValue(this); }
      set { PropertyMetadata.City.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CityAliasName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CityAliasName", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=35, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CityAliasName")]
    public string CityAliasName {
      get { return PropertyMetadata.CityAliasName.GetValue(this); }
      set { PropertyMetadata.CityAliasName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CountyName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CountyName", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=45, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CountyName")]
    public string CountyName {
      get { return PropertyMetadata.CountyName.GetValue(this); }
      set { PropertyMetadata.CountyName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CountyFIPS. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CountyFIPS", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=5, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CountyFIPS")]
    public string CountyFIPS {
      get { return PropertyMetadata.CountyFIPS.GetValue(this); }
      set { PropertyMetadata.CountyFIPS.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StateFIPS. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StateFIPS", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=2, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_StateFIPS")]
    public string StateFIPS {
      get { return PropertyMetadata.StateFIPS.GetValue(this); }
      set { PropertyMetadata.StateFIPS.SetValue(this, value); }
    }

    /// <summary>Gets or sets the TimeZone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="TimeZone", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=2, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_TimeZone")]
    public string TimeZone {
      get { return PropertyMetadata.TimeZone.GetValue(this); }
      set { PropertyMetadata.TimeZone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DayLightSaving. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DayLightSaving", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=1, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_DayLightSaving")]
    public string DayLightSaving {
      get { return PropertyMetadata.DayLightSaving.GetValue(this); }
      set { PropertyMetadata.DayLightSaving.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MSA. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MSA", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_MSA")]
    public string MSA {
      get { return PropertyMetadata.MSA.GetValue(this); }
      set { PropertyMetadata.MSA.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PMSA. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PMSA", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_PMSA")]
    public string PMSA {
      get { return PropertyMetadata.PMSA.GetValue(this); }
      set { PropertyMetadata.PMSA.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CSA. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CSA", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CSA")]
    public string CSA {
      get { return PropertyMetadata.CSA.GetValue(this); }
      set { PropertyMetadata.CSA.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CBSA. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CBSA", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CBSA")]
    public string CBSA {
      get { return PropertyMetadata.CBSA.GetValue(this); }
      set { PropertyMetadata.CBSA.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CBSA_DIV. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CBSA_DIV", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CBSA_DIV")]
    public string CBSA_DIV {
      get { return PropertyMetadata.CBSA_DIV.GetValue(this); }
      set { PropertyMetadata.CBSA_DIV.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CBSA_Type. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CBSA_Type", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CBSA_Type")]
    public string CBSA_Type {
      get { return PropertyMetadata.CBSA_Type.GetValue(this); }
      set { PropertyMetadata.CBSA_Type.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CBSA_Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CBSA_Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=150, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CBSA_Name")]
    public string CBSA_Name {
      get { return PropertyMetadata.CBSA_Name.GetValue(this); }
      set { PropertyMetadata.CBSA_Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MSA_Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MSA_Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=150, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_MSA_Name")]
    public string MSA_Name {
      get { return PropertyMetadata.MSA_Name.GetValue(this); }
      set { PropertyMetadata.MSA_Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PMSA_Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PMSA_Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=150, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_PMSA_Name")]
    public string PMSA_Name {
      get { return PropertyMetadata.PMSA_Name.GetValue(this); }
      set { PropertyMetadata.PMSA_Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Region. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Region", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=10, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_Region")]
    public string Region {
      get { return PropertyMetadata.Region.GetValue(this); }
      set { PropertyMetadata.Region.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Division. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Division", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=20, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_Division")]
    public string Division {
      get { return PropertyMetadata.Division.GetValue(this); }
      set { PropertyMetadata.Division.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MailingName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MailingName", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=1, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_MailingName")]
    public string MailingName {
      get { return PropertyMetadata.MailingName.GetValue(this); }
      set { PropertyMetadata.MailingName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Establishments2003. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Establishments2003", AutoGenerateField=true)]
    public System.Nullable<int> Establishments2003 {
      get { return PropertyMetadata.Establishments2003.GetValue(this); }
      set { PropertyMetadata.Establishments2003.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Employment2003. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Employment2003", AutoGenerateField=true)]
    public System.Nullable<int> Employment2003 {
      get { return PropertyMetadata.Employment2003.GetValue(this); }
      set { PropertyMetadata.Employment2003.SetValue(this, value); }
    }

    /// <summary>Gets or sets the FirstQuarterPayroll2003. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="FirstQuarterPayroll2003", AutoGenerateField=true)]
    public System.Nullable<int> FirstQuarterPayroll2003 {
      get { return PropertyMetadata.FirstQuarterPayroll2003.GetValue(this); }
      set { PropertyMetadata.FirstQuarterPayroll2003.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AnnualPayroll2003. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AnnualPayroll2003", AutoGenerateField=true)]
    public System.Nullable<int> AnnualPayroll2003 {
      get { return PropertyMetadata.AnnualPayroll2003.GetValue(this); }
      set { PropertyMetadata.AnnualPayroll2003.SetValue(this, value); }
    }

    /// <summary>Gets or sets the EmploymentFlag2003. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="EmploymentFlag2003", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_EmploymentFlag2003")]
    public string EmploymentFlag2003 {
      get { return PropertyMetadata.EmploymentFlag2003.GetValue(this); }
      set { PropertyMetadata.EmploymentFlag2003.SetValue(this, value); }
    }

    /// <summary>Gets or sets the GrowthRank. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="GrowthRank", AutoGenerateField=true)]
    public System.Nullable<int> GrowthRank {
      get { return PropertyMetadata.GrowthRank.GetValue(this); }
      set { PropertyMetadata.GrowthRank.SetValue(this, value); }
    }

    /// <summary>Gets or sets the GrowthHousingUnits2003. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="GrowthHousingUnits2003", AutoGenerateField=true)]
    public System.Nullable<int> GrowthHousingUnits2003 {
      get { return PropertyMetadata.GrowthHousingUnits2003.GetValue(this); }
      set { PropertyMetadata.GrowthHousingUnits2003.SetValue(this, value); }
    }

    /// <summary>Gets or sets the GrowthHousingUnits2004. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="GrowthHousingUnits2004", AutoGenerateField=true)]
    public System.Nullable<int> GrowthHousingUnits2004 {
      get { return PropertyMetadata.GrowthHousingUnits2004.GetValue(this); }
      set { PropertyMetadata.GrowthHousingUnits2004.SetValue(this, value); }
    }

    /// <summary>Gets or sets the GrowthIncreaseNumber. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="GrowthIncreaseNumber", AutoGenerateField=true)]
    public System.Nullable<int> GrowthIncreaseNumber {
      get { return PropertyMetadata.GrowthIncreaseNumber.GetValue(this); }
      set { PropertyMetadata.GrowthIncreaseNumber.SetValue(this, value); }
    }

    /// <summary>Gets or sets the GrowthIncreasePercentage. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="GrowthIncreasePercentage", AutoGenerateField=true)]
    public System.Nullable<decimal> GrowthIncreasePercentage {
      get { return PropertyMetadata.GrowthIncreasePercentage.GetValue(this); }
      set { PropertyMetadata.GrowthIncreasePercentage.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CBSAPop2003. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CBSAPop2003", AutoGenerateField=true)]
    public System.Nullable<int> CBSAPop2003 {
      get { return PropertyMetadata.CBSAPop2003.GetValue(this); }
      set { PropertyMetadata.CBSAPop2003.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CBSADivPop2003. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CBSADivPop2003", AutoGenerateField=true)]
    public System.Nullable<int> CBSADivPop2003 {
      get { return PropertyMetadata.CBSADivPop2003.GetValue(this); }
      set { PropertyMetadata.CBSADivPop2003.SetValue(this, value); }
    }

    /// <summary>Gets or sets the C110thCongressionalDistrict. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="C110thCongressionalDistrict", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_C110thCongressionalDistrict")]
    public string C110thCongressionalDistrict {
      get { return PropertyMetadata.C110thCongressionalDistrict.GetValue(this); }
      set { PropertyMetadata.C110thCongressionalDistrict.SetValue(this, value); }
    }

    /// <summary>Gets or sets the C110thCongressionalLandArea. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="C110thCongressionalLandArea", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_C110thCongressionalLandArea")]
    public string C110thCongressionalLandArea {
      get { return PropertyMetadata.C110thCongressionalLandArea.GetValue(this); }
      set { PropertyMetadata.C110thCongressionalLandArea.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DeliveryResidential. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DeliveryResidential", AutoGenerateField=true)]
    public System.Nullable<int> DeliveryResidential {
      get { return PropertyMetadata.DeliveryResidential.GetValue(this); }
      set { PropertyMetadata.DeliveryResidential.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DeliveryBusiness. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DeliveryBusiness", AutoGenerateField=true)]
    public System.Nullable<int> DeliveryBusiness {
      get { return PropertyMetadata.DeliveryBusiness.GetValue(this); }
      set { PropertyMetadata.DeliveryBusiness.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DeliveryTotal. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DeliveryTotal", AutoGenerateField=true)]
    public System.Nullable<int> DeliveryTotal {
      get { return PropertyMetadata.DeliveryTotal.GetValue(this); }
      set { PropertyMetadata.DeliveryTotal.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PreferredLastLineKey. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PreferredLastLineKey", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=25, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_PreferredLastLineKey")]
    public string PreferredLastLineKey {
      get { return PropertyMetadata.PreferredLastLineKey.GetValue(this); }
      set { PropertyMetadata.PreferredLastLineKey.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ClassificationCode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ClassificationCode", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=2, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_ClassificationCode")]
    public string ClassificationCode {
      get { return PropertyMetadata.ClassificationCode.GetValue(this); }
      set { PropertyMetadata.ClassificationCode.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MultiCounty. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MultiCounty", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=1, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_MultiCounty")]
    public string MultiCounty {
      get { return PropertyMetadata.MultiCounty.GetValue(this); }
      set { PropertyMetadata.MultiCounty.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CSAName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CSAName", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CSAName")]
    public string CSAName {
      get { return PropertyMetadata.CSAName.GetValue(this); }
      set { PropertyMetadata.CSAName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CBSA_Div_Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CBSA_Div_Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=false, ErrorMessageResourceName="DELUXE_BUSINESS_CBSA_Div_Name")]
    public string CBSA_Div_Name {
      get { return PropertyMetadata.CBSA_Div_Name.GetValue(this); }
      set { PropertyMetadata.CBSA_Div_Name.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, int> Id = new IbEm.DataEntityProperty<DELUXE_BUSINESS, int>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The ZipCode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> ZipCode = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("ZipCode", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PrimaryRecord <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> PrimaryRecord = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("PrimaryRecord", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Population <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> Population = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("Population", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The HouseholdsPerZipcode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> HouseholdsPerZipcode = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("HouseholdsPerZipcode", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The WhitePopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> WhitePopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("WhitePopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BlackPopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> BlackPopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("BlackPopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The HispanicPopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> HispanicPopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("HispanicPopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AsianPopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> AsianPopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("AsianPopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The HawaiianPopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> HawaiianPopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("HawaiianPopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IndianPopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> IndianPopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("IndianPopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The OtherPopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> OtherPopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("OtherPopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MalePopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> MalePopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("MalePopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The FemalePopulation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> FemalePopulation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("FemalePopulation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PersonsPerHousehold <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> PersonsPerHousehold = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("PersonsPerHousehold", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AverageHouseValue <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> AverageHouseValue = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("AverageHouseValue", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The IncomePerHousehold <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> IncomePerHousehold = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("IncomePerHousehold", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MedianAge <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> MedianAge = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("MedianAge", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MedianAgeMale <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> MedianAgeMale = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("MedianAgeMale", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MedianAgeFemale <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> MedianAgeFemale = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("MedianAgeFemale", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Latitude <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> Latitude = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("Latitude", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Longitude <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> Longitude = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("Longitude", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Elevation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> Elevation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("Elevation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The State <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> State = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("State", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StateFullName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> StateFullName = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("StateFullName", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CityType <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CityType = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CityType", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CityAliasAbbreviation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CityAliasAbbreviation = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CityAliasAbbreviation", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AreaCode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> AreaCode = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("AreaCode", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The City <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> City = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("City", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CityAliasName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CityAliasName = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CityAliasName", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CountyName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CountyName = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CountyName", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CountyFIPS <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CountyFIPS = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CountyFIPS", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StateFIPS <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> StateFIPS = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("StateFIPS", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The TimeZone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> TimeZone = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("TimeZone", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DayLightSaving <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> DayLightSaving = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("DayLightSaving", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MSA <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> MSA = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("MSA", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PMSA <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> PMSA = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("PMSA", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CSA <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CSA = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CSA", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CBSA <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CBSA = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CBSA", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CBSA_DIV <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CBSA_DIV = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CBSA_DIV", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CBSA_Type <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CBSA_Type = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CBSA_Type", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CBSA_Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CBSA_Name = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CBSA_Name", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MSA_Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> MSA_Name = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("MSA_Name", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PMSA_Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> PMSA_Name = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("PMSA_Name", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Region <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> Region = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("Region", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Division <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> Division = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("Division", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MailingName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> MailingName = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("MailingName", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Establishments2003 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> Establishments2003 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("Establishments2003", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Employment2003 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> Employment2003 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("Employment2003", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The FirstQuarterPayroll2003 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> FirstQuarterPayroll2003 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("FirstQuarterPayroll2003", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AnnualPayroll2003 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> AnnualPayroll2003 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("AnnualPayroll2003", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The EmploymentFlag2003 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> EmploymentFlag2003 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("EmploymentFlag2003", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The GrowthRank <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> GrowthRank = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("GrowthRank", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The GrowthHousingUnits2003 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> GrowthHousingUnits2003 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("GrowthHousingUnits2003", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The GrowthHousingUnits2004 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> GrowthHousingUnits2004 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("GrowthHousingUnits2004", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The GrowthIncreaseNumber <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> GrowthIncreaseNumber = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("GrowthIncreaseNumber", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The GrowthIncreasePercentage <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>> GrowthIncreasePercentage = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<decimal>>("GrowthIncreasePercentage", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CBSAPop2003 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> CBSAPop2003 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("CBSAPop2003", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CBSADivPop2003 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> CBSADivPop2003 = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("CBSADivPop2003", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The C110thCongressionalDistrict <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> C110thCongressionalDistrict = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("C110thCongressionalDistrict", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The C110thCongressionalLandArea <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> C110thCongressionalLandArea = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("C110thCongressionalLandArea", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DeliveryResidential <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> DeliveryResidential = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("DeliveryResidential", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DeliveryBusiness <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> DeliveryBusiness = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("DeliveryBusiness", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DeliveryTotal <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>> DeliveryTotal = new IbEm.DataEntityProperty<DELUXE_BUSINESS, System.Nullable<int>>("DeliveryTotal", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PreferredLastLineKey <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> PreferredLastLineKey = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("PreferredLastLineKey", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ClassificationCode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> ClassificationCode = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("ClassificationCode", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MultiCounty <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> MultiCounty = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("MultiCounty", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CSAName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CSAName = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CSAName", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CBSA_Div_Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DELUXE_BUSINESS, string> CBSA_Div_Name = new IbEm.DataEntityProperty<DELUXE_BUSINESS, string>("CBSA_Div_Name", true, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String ZipCode = "ZipCode";
      public const String PrimaryRecord = "PrimaryRecord";
      public const String Population = "Population";
      public const String HouseholdsPerZipcode = "HouseholdsPerZipcode";
      public const String WhitePopulation = "WhitePopulation";
      public const String BlackPopulation = "BlackPopulation";
      public const String HispanicPopulation = "HispanicPopulation";
      public const String AsianPopulation = "AsianPopulation";
      public const String HawaiianPopulation = "HawaiianPopulation";
      public const String IndianPopulation = "IndianPopulation";
      public const String OtherPopulation = "OtherPopulation";
      public const String MalePopulation = "MalePopulation";
      public const String FemalePopulation = "FemalePopulation";
      public const String PersonsPerHousehold = "PersonsPerHousehold";
      public const String AverageHouseValue = "AverageHouseValue";
      public const String IncomePerHousehold = "IncomePerHousehold";
      public const String MedianAge = "MedianAge";
      public const String MedianAgeMale = "MedianAgeMale";
      public const String MedianAgeFemale = "MedianAgeFemale";
      public const String Latitude = "Latitude";
      public const String Longitude = "Longitude";
      public const String Elevation = "Elevation";
      public const String State = "State";
      public const String StateFullName = "StateFullName";
      public const String CityType = "CityType";
      public const String CityAliasAbbreviation = "CityAliasAbbreviation";
      public const String AreaCode = "AreaCode";
      public const String City = "City";
      public const String CityAliasName = "CityAliasName";
      public const String CountyName = "CountyName";
      public const String CountyFIPS = "CountyFIPS";
      public const String StateFIPS = "StateFIPS";
      public const String TimeZone = "TimeZone";
      public const String DayLightSaving = "DayLightSaving";
      public const String MSA = "MSA";
      public const String PMSA = "PMSA";
      public const String CSA = "CSA";
      public const String CBSA = "CBSA";
      public const String CBSA_DIV = "CBSA_DIV";
      public const String CBSA_Type = "CBSA_Type";
      public const String CBSA_Name = "CBSA_Name";
      public const String MSA_Name = "MSA_Name";
      public const String PMSA_Name = "PMSA_Name";
      public const String Region = "Region";
      public const String Division = "Division";
      public const String MailingName = "MailingName";
      public const String Establishments2003 = "Establishments2003";
      public const String Employment2003 = "Employment2003";
      public const String FirstQuarterPayroll2003 = "FirstQuarterPayroll2003";
      public const String AnnualPayroll2003 = "AnnualPayroll2003";
      public const String EmploymentFlag2003 = "EmploymentFlag2003";
      public const String GrowthRank = "GrowthRank";
      public const String GrowthHousingUnits2003 = "GrowthHousingUnits2003";
      public const String GrowthHousingUnits2004 = "GrowthHousingUnits2004";
      public const String GrowthIncreaseNumber = "GrowthIncreaseNumber";
      public const String GrowthIncreasePercentage = "GrowthIncreasePercentage";
      public const String CBSAPop2003 = "CBSAPop2003";
      public const String CBSADivPop2003 = "CBSADivPop2003";
      public const String C110thCongressionalDistrict = "C110thCongressionalDistrict";
      public const String C110thCongressionalLandArea = "C110thCongressionalLandArea";
      public const String DeliveryResidential = "DeliveryResidential";
      public const String DeliveryBusiness = "DeliveryBusiness";
      public const String DeliveryTotal = "DeliveryTotal";
      public const String PreferredLastLineKey = "PreferredLastLineKey";
      public const String ClassificationCode = "ClassificationCode";
      public const String MultiCounty = "MultiCounty";
      public const String CSAName = "CSAName";
      public const String CBSA_Div_Name = "CBSA_Div_Name";
    }
    #endregion EntityPropertyNames
  }
  #endregion DELUXE_BUSINESS class

  #region MULTI_COUNTY class

  /// <summary>The auto-generated MULTI_COUNTY class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"GeoLocationEntities")]
  [IbEm.DefaultEntitySetName(@"GeoLocationEntities.MULTI_COUNTY")]
  public partial class MULTI_COUNTY : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<MULTI_COUNTY, object>> expr) {
      return IbCore.PropertyPath.For<MULTI_COUNTY>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="MULTI_COUNTY_Id")]
    public int Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ZipCode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ZipCode", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=5, IsRequired=false, ErrorMessageResourceName="MULTI_COUNTY_ZipCode")]
    public string ZipCode {
      get { return PropertyMetadata.ZipCode.GetValue(this); }
      set { PropertyMetadata.ZipCode.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StateFIPS. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StateFIPS", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=2, IsRequired=false, ErrorMessageResourceName="MULTI_COUNTY_StateFIPS")]
    public string StateFIPS {
      get { return PropertyMetadata.StateFIPS.GetValue(this); }
      set { PropertyMetadata.StateFIPS.SetValue(this, value); }
    }

    /// <summary>Gets or sets the State. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="State", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=2, IsRequired=false, ErrorMessageResourceName="MULTI_COUNTY_State")]
    public string State {
      get { return PropertyMetadata.State.GetValue(this); }
      set { PropertyMetadata.State.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CountyFIPS. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CountyFIPS", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=3, IsRequired=false, ErrorMessageResourceName="MULTI_COUNTY_CountyFIPS")]
    public string CountyFIPS {
      get { return PropertyMetadata.CountyFIPS.GetValue(this); }
      set { PropertyMetadata.CountyFIPS.SetValue(this, value); }
    }

    /// <summary>Gets or sets the County. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="County", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=false, ErrorMessageResourceName="MULTI_COUNTY_County")]
    public string County {
      get { return PropertyMetadata.County.GetValue(this); }
      set { PropertyMetadata.County.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MULTI_COUNTY, int> Id = new IbEm.DataEntityProperty<MULTI_COUNTY, int>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The ZipCode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MULTI_COUNTY, string> ZipCode = new IbEm.DataEntityProperty<MULTI_COUNTY, string>("ZipCode", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StateFIPS <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MULTI_COUNTY, string> StateFIPS = new IbEm.DataEntityProperty<MULTI_COUNTY, string>("StateFIPS", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The State <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MULTI_COUNTY, string> State = new IbEm.DataEntityProperty<MULTI_COUNTY, string>("State", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CountyFIPS <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MULTI_COUNTY, string> CountyFIPS = new IbEm.DataEntityProperty<MULTI_COUNTY, string>("CountyFIPS", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The County <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<MULTI_COUNTY, string> County = new IbEm.DataEntityProperty<MULTI_COUNTY, string>("County", true, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String ZipCode = "ZipCode";
      public const String StateFIPS = "StateFIPS";
      public const String State = "State";
      public const String CountyFIPS = "CountyFIPS";
      public const String County = "County";
    }
    #endregion EntityPropertyNames
  }
  #endregion MULTI_COUNTY class

  #region Zipcode class

  /// <summary>The auto-generated Zipcode class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"GeoLocationEntities")]
  [IbEm.DefaultEntitySetName(@"GeoLocationEntities.Zipcode")]
  public partial class Zipcode : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Zipcode, object>> expr) {
      return IbCore.PropertyPath.For<Zipcode>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the zipcode1. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="zipcode1", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=5, IsRequired=true, ErrorMessageResourceName="Zipcode_zipcode1")]
    public string zipcode1 {
      get { return PropertyMetadata.zipcode1.GetValue(this); }
      set { PropertyMetadata.zipcode1.SetValue(this, value); }
    }

    /// <summary>Gets or sets the state. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="state", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=2, IsRequired=true, ErrorMessageResourceName="Zipcode_state")]
    public string state {
      get { return PropertyMetadata.state.GetValue(this); }
      set { PropertyMetadata.state.SetValue(this, value); }
    }

    /// <summary>Gets or sets the city. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="city", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=true, ErrorMessageResourceName="Zipcode_city")]
    public string city {
      get { return PropertyMetadata.city.GetValue(this); }
      set { PropertyMetadata.city.SetValue(this, value); }
    }

    /// <summary>Gets or sets the lat. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="lat", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=20, IsRequired=true, ErrorMessageResourceName="Zipcode_lat")]
    public string lat {
      get { return PropertyMetadata.lat.GetValue(this); }
      set { PropertyMetadata.lat.SetValue(this, value); }
    }

    /// <summary>Gets or sets the lon. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="lon", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=20, IsRequired=true, ErrorMessageResourceName="Zipcode_lon")]
    public string lon {
      get { return PropertyMetadata.lon.GetValue(this); }
      set { PropertyMetadata.lon.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The zipcode1 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Zipcode, string> zipcode1 = new IbEm.DataEntityProperty<Zipcode, string>("zipcode1", false, true, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The state <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Zipcode, string> state = new IbEm.DataEntityProperty<Zipcode, string>("state", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The city <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Zipcode, string> city = new IbEm.DataEntityProperty<Zipcode, string>("city", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The lat <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Zipcode, string> lat = new IbEm.DataEntityProperty<Zipcode, string>("lat", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The lon <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Zipcode, string> lon = new IbEm.DataEntityProperty<Zipcode, string>("lon", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String zipcode1 = "zipcode1";
      public const String state = "state";
      public const String city = "city";
      public const String lat = "lat";
      public const String lon = "lon";
    }
    #endregion EntityPropertyNames
  }
  #endregion Zipcode class

  #region USCity class

  /// <summary>The auto-generated USCity class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"GeoLocationEntities")]
  [IbEm.DefaultEntitySetName(@"GeoLocationEntities.USCity")]
  public partial class USCity : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<USCity, object>> expr) {
      return IbCore.PropertyPath.For<USCity>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="USCity_Id")]
    public int Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the City. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="City", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=true, ErrorMessageResourceName="USCity_City")]
    public string City {
      get { return PropertyMetadata.City.GetValue(this); }
      set { PropertyMetadata.City.SetValue(this, value); }
    }

    /// <summary>Gets or sets the State. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="State", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=true, ErrorMessageResourceName="USCity_State")]
    public string State {
      get { return PropertyMetadata.State.GetValue(this); }
      set { PropertyMetadata.State.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Zipcode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Zipcode", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="USCity_Zipcode")]
    public int Zipcode {
      get { return PropertyMetadata.Zipcode.GetValue(this); }
      set { PropertyMetadata.Zipcode.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Areacode. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Areacode", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=25, IsRequired=true, ErrorMessageResourceName="USCity_Areacode")]
    public string Areacode {
      get { return PropertyMetadata.Areacode.GetValue(this); }
      set { PropertyMetadata.Areacode.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Lat. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Lat", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="USCity_Lat")]
    public double Lat {
      get { return PropertyMetadata.Lat.GetValue(this); }
      set { PropertyMetadata.Lat.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Lon. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Lon", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="USCity_Lon")]
    public double Lon {
      get { return PropertyMetadata.Lon.GetValue(this); }
      set { PropertyMetadata.Lon.SetValue(this, value); }
    }

    /// <summary>Gets or sets the County. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="County", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=255, IsRequired=true, ErrorMessageResourceName="USCity_County")]
    public string County {
      get { return PropertyMetadata.County.GetValue(this); }
      set { PropertyMetadata.County.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Timezone. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Timezone", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=25, IsRequired=true, ErrorMessageResourceName="USCity_Timezone")]
    public string Timezone {
      get { return PropertyMetadata.Timezone.GetValue(this); }
      set { PropertyMetadata.Timezone.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DST. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DST", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=25, IsRequired=true, ErrorMessageResourceName="USCity_DST")]
    public string DST {
      get { return PropertyMetadata.DST.GetValue(this); }
      set { PropertyMetadata.DST.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DMA. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DMA", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="USCity_DMA")]
    public int DMA {
      get { return PropertyMetadata.DMA.GetValue(this); }
      set { PropertyMetadata.DMA.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Type. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Type", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=25, IsRequired=true, ErrorMessageResourceName="USCity_Type")]
    public string Type {
      get { return PropertyMetadata.Type.GetValue(this); }
      set { PropertyMetadata.Type.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Continental. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Continental", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=1, IsRequired=true, ErrorMessageResourceName="USCity_Continental")]
    public string Continental {
      get { return PropertyMetadata.Continental.GetValue(this); }
      set { PropertyMetadata.Continental.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Country. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Country", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=150, IsRequired=true, ErrorMessageResourceName="USCity_Country")]
    public string Country {
      get { return PropertyMetadata.Country.GetValue(this); }
      set { PropertyMetadata.Country.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LATD. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LATD", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="USCity_LATD")]
    public double LATD {
      get { return PropertyMetadata.LATD.GetValue(this); }
      set { PropertyMetadata.LATD.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LOND. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LOND", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="USCity_LOND")]
    public double LOND {
      get { return PropertyMetadata.LOND.GetValue(this); }
      set { PropertyMetadata.LOND.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, int> Id = new IbEm.DataEntityProperty<USCity, int>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The City <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> City = new IbEm.DataEntityProperty<USCity, string>("City", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The State <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> State = new IbEm.DataEntityProperty<USCity, string>("State", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Zipcode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, int> Zipcode = new IbEm.DataEntityProperty<USCity, int>("Zipcode", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Areacode <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> Areacode = new IbEm.DataEntityProperty<USCity, string>("Areacode", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Lat <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, double> Lat = new IbEm.DataEntityProperty<USCity, double>("Lat", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Lon <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, double> Lon = new IbEm.DataEntityProperty<USCity, double>("Lon", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The County <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> County = new IbEm.DataEntityProperty<USCity, string>("County", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Timezone <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> Timezone = new IbEm.DataEntityProperty<USCity, string>("Timezone", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DST <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> DST = new IbEm.DataEntityProperty<USCity, string>("DST", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DMA <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, int> DMA = new IbEm.DataEntityProperty<USCity, int>("DMA", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Type <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> Type = new IbEm.DataEntityProperty<USCity, string>("Type", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Continental <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> Continental = new IbEm.DataEntityProperty<USCity, string>("Continental", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Country <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, string> Country = new IbEm.DataEntityProperty<USCity, string>("Country", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LATD <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, double> LATD = new IbEm.DataEntityProperty<USCity, double>("LATD", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LOND <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<USCity, double> LOND = new IbEm.DataEntityProperty<USCity, double>("LOND", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String City = "City";
      public const String State = "State";
      public const String Zipcode = "Zipcode";
      public const String Areacode = "Areacode";
      public const String Lat = "Lat";
      public const String Lon = "Lon";
      public const String County = "County";
      public const String Timezone = "Timezone";
      public const String DST = "DST";
      public const String DMA = "DMA";
      public const String Type = "Type";
      public const String Continental = "Continental";
      public const String Country = "Country";
      public const String LATD = "LATD";
      public const String LOND = "LOND";
    }
    #endregion EntityPropertyNames
  }
  #endregion USCity class

  #region EntityRelations

  /// <summary>
  /// A generated class that returns the relations between entities in this model.
  /// </summary>
  [IbCore.IdeaBladeGuid("d81bde6b-f023-4b33-930c-edfc906eb2bc", "2.1.4")]
  public partial class EntityRelations : IbEm.IEntityRelations {

    /// Explicit static constructor ensures static fields are initialized.
    static EntityRelations() {}
  }
  #endregion EntityRelations
}
